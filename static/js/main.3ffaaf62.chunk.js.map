{"version":3,"sources":["myBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","type","placeholder","value","onChange","target","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","class","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","orderBy","onSnapshot","snapshot","tweetArray","docs","map","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ffaaf62.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  // const getMyTweets = async () => {\r\n  //   const tweets = await dbService\r\n  //     .collection(\"tweets\")\r\n  //     .where(\"creatorId\", \"==\", userObj.uid)\r\n  //     .orderBy(\"createdAt\")\r\n  //     .get();\r\n  // };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   getMyTweets();\r\n  // }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"이름 작성\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 업데이트\"\r\n          onSubmit={onSubmit}\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        로그아웃\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { authService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    let data;\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"계정 생성\" : \"로그인\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"로그인\" : \"계정 생성\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"myBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGithub,\r\n  faGoogle,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          구글 계정 이용 <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          깃허브 계정 이용 <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, isOwner, userObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\r\n    toggleEditing();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n  return (\r\n    <>\r\n      <span>{userObj.displayName}</span>\r\n      <div className=\"nweet\" style={{ marginTop: \"10px\" }}>\r\n        {editing ? (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"트윗을 수정하세요\"\r\n                value={newTweet}\r\n                onChange={onChange}\r\n                required\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"트윗 업데이트\" className=\"formBtn\" />\r\n            </form>\r\n            <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n              취소\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{tweetObj.text}</h4>\r\n            {tweetObj.attachmentUrl && (\r\n              <img src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n            )}\r\n            {isOwner && (\r\n              <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (tweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          type=\"text\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          placeholder=\"무슨 생각을 하고 계신가요?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 추가</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>제거하기</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"myBase\";\r\nimport Tweet from \"components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"tweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const tweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTweets(tweetArray);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n            userObj={userObj}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName ? `${userObj.displayName}의 프로필` : \"프로필\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} 드위터</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}